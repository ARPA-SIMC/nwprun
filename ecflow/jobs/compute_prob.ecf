%include <sched_heavy.h>
%include <%HPCENV%/smnd.h>
%include <%HPCENV%/modules.h>
%include <head.h>

# source other optional modules
. $NWPCONFBINDIR/parcomp.sh
. $NWPCONFBINDIR/nwpwait.sh
. $NWPCONFBINDIR/putarki.sh
. $NWPCONFBINDIR/arki_tools.sh

set -x

# for fieldextra
safe_rm_rf $FXTR_WORKDIR
mkdir -p $FXTR_WORKDIR $FXTR_DATADIR
# for scacchiera & c.
POSTPROC_EPS_WORKDIR=$WORKDIR/postproc_eps
safe_rm_rf $POSTPROC_EPS_WORKDIR
mkdir -p $POSTPROC_EPS_WORKDIR
module load singularity

ftp_mkdir() {
:
}

ftp_cp_one() {
:
}

ftp_cp_all() {
    argc=$#
    argv=("$@")

    remdir=${argv[$((argc-1))]}
    for ((j=0; j<argc-1; j++)); do
	ftp_cp_one ${argv[$j]} $remdir
    done
}


# this can be run simultaneously with fieldextra
scacchiera_tp() {
  cd $POSTPROC_EPS_WORKDIR
  $SIMC_TOOLS $WORKDIR_BASE/nwprun/postproc_eps/scacchiera_tp.py \
   $WORKDIR_BASE/nwprun/postproc_eps/macroaree_er.shp \
   $WORKDIR .

  remdir=scacchiera/${DATE}${TIME}/superamento_soglie
  ftp_mkdir $remdir
  ftp_cp_all MTG_FC_LENS_PR_0_TPPC_GRND_NULL_NULL_NULL_NULL_${DATE}${TIME}_??????????_003_???_scacchiera.png $remdir
  
}

# these require the probabilities computed by fieldextra
scacchiera_ensmean() {
  cd $POSTPROC_EPS_WORKDIR
  $SIMC_TOOLS $WORKDIR_BASE/nwprun/postproc_eps/scacchiera_ensmean.py \
   $WORKDIR_BASE/nwprun/postproc_eps/macroaree_er.shp \
   $FXTR_DATADIR .

  remdir=scacchiera/${DATE}${TIME}/ensmean/1H
  ftp_mkdir $remdir
  ftp_cp_all MTG_FC_LENS_PR_0_TPEM_GRND_NULL_NULL_NULL_NULL_${DATE}${TIME}_??????????_001_???_scacchiera.png $remdir

  remdir=scacchiera/${DATE}${TIME}/ensmean/3H
  ftp_mkdir $remdir
  ftp_cp_all MTG_FC_LENS_PR_0_TPEM_GRND_NULL_NULL_NULL_NULL_${DATE}${TIME}_??????????_003_???_scacchiera.png $remdir
  
}

scacchiera_prob() {
  cd $POSTPROC_EPS_WORKDIR
  $SIMC_TOOLS $WORKDIR_BASE/nwprun/postproc_eps/scacchiera_prob.py \
   $WORKDIR_BASE/nwprun/postproc_eps/macroaree_er.shp \
   $FXTR_DATADIR .

  remdir=scacchiera/${DATE}${TIME}/maxprob/1H
  ftp_mkdir $remdir
  ftp_cp_all MTG_FC_LENS_PR_0_TPPR_GRND_NULL_NULL_NULL_NULL_${DATE}${TIME}_??????????_001_???_max_scacchiera.png $remdir
  
  remdir=scacchiera/${DATE}${TIME}/maxprob/3H
  ftp_mkdir $remdir
  ftp_cp_all MTG_FC_LENS_PR_0_TPPR_GRND_NULL_NULL_NULL_NULL_${DATE}${TIME}_??????????_003_???_max_scacchiera.png $remdir

  remdir=scacchiera/${DATE}${TIME}/maxprob/24H
  ftp_mkdir $remdir
  ftp_cp_all MTG_FC_LENS_PR_0_TPPR_GRND_NULL_NULL_NULL_NULL_${DATE}${TIME}_??????????_024_???_max_scacchiera.png $remdir

}

mappe_eps() {
  cd $POSTPROC_EPS_WORKDIR
  $SIMC_TOOLS $WORKDIR_BASE/nwprun/postproc_eps/mappe_eps.py \
     $WORKDIR_BASE/nwprun/postproc_eps/Regioni_latlon.tif \
     $WORKDIR_BASE/nwprun/postproc_eps/ProvinceER_latlon.tif \
     "$FXTR_DATADIR/*_?????????????${1}.grib" . 
}

# evaluate availability
# ensemble members
set -a ma
lma=
for n in `seq 1 $ENS_TOTAL_MEMB`; do
    if [ -f "$WORKDIR/cosmo.$n/data/lfff02030000" ]; then
        ma[$n]=Y
        lma=$n
    else
        ma[$n]=N
    fi
done
echo "Ensemble member forecasts: ${ma[*]}"
echo "Last available forecast: $lma"

# no analyses available at all, abort
if [ -z "$lma" ]; then
    exit 1
fi

# link or replace forecasts
# ensemble members
for n in `seq 1 $ENS_TOTAL_MEMB`; do
    # rm -r $FXTR_WORKDIR/input.$n3 # senza la barra
    n3=`printf "%%03d" $n`
    if [ "${ma[$n]}" = Y ]; then
        ln -s $WORKDIR/cosmo.$n/data \
            $FXTR_WORKDIR/input.$n3
    elif [ -n "$lma" ]; then # use another member
        for file in $WORKDIR/cosmo.$lma/data/lfff????????; do
            mkdir -p $FXTR_WORKDIR/input.$n3
            $SIMC_TOOLS grib_set -s perturbationNumber=$n $file $FXTR_WORKDIR/input.$n3/${file##*/}
        done
    fi
done

# launch scacchiera_tp in parallel with fieldextra
scacchiera_tp &

cd $FXTR_WORKDIR
# prepare fxtr namelist
for delta in 01 03 24; do
    conf_template fxtr_tpp${delta}h.nl
    $FXTR_BIN fxtr_tpp${delta}h.nl
done
conf_template fxtr_wspeedp1h.nl
$FXTR_BIN fxtr_wspeedp1h.nl
conf_template fxtr_wmaxp1h.nl
$FXTR_BIN fxtr_wmaxp1h.nl

# correct grib table number for old grib_api versions
for file in $FXTR_DATADIR/*.grib; do
    $SIMC_TOOLS grib_set -s tablesVersion=11 $file $file.tmp
    mv $file.tmp $file
done

dirname=${MODEL_SIGNAL}_prob_$DATE$TIME
putarki_configured_setup $dirname "reftime=$DATE$TIME" "format=grib" "signal=$MODEL_SIGNAL"
for file in $FXTR_DATADIR/*.grib; do
    if [ -f "$file" ]; then
        putarki_configured_archive $dirname $file
    fi
done
putarki_configured_end $dirname

# copy to archive
subdir=cosmo_2I_fcens/$DATE$TIME
mkdir -p $CINECA_ARCHIVE_POST/$subdir
cp -a $FXTR_DATADIR/*.grib $CINECA_ARCHIVE_POST/$subdir

# wait for scacchiera_tp
wait

# these cannot be parallelised because they use the same temporary files
scacchiera_ensmean
scacchiera_prob
# wait

# poor man parallelization
for n in `seq 0 9`; do
    mappe_eps $n &
done
wait
