%include <sched_wait.h>
%include <head.h>

# source other optional modules
. $NWPCONFBINDIR/nwptime.sh
. $NWPCONFBINDIR/cosmo_model.sh
. $NWPCONFBINDIR/putarki.sh
. $NWPCONFBINDIR/arkilocal.sh
. $NWPCONFBINDIR/arki_tools.sh
# end of setup

set -x
# archive first on remote server
if [ -f "$LETKF_DATADIR/laf${DATE}${TIME}0000.det" ]; then
    putarki_archive grib $LETKF_DATADIR/laf${DATE}${TIME}0000.det
fi

# then archive locally for other suites
if [ -n "$MODEL_ARCHIVE_OUTPUT_ANA" ]; then
if [ "$TIME" = "21" ]; then
# transfer to marconi for ensemble forecast, use rsync to create
# temporary file during copy
    mkdir -p $MODEL_ARCHIVE_OUTPUT_ANA
    rsync -pt $LETKF_DATADIR/laf${DATE}${TIME}0000.??? $MODEL_ARCHIVE_OUTPUT_ANA
# for galileo do remote copy:
    if [ -n "$MODEL_ARCHIVE_OUTPUT_ANA_REMOTE" ]; then
#    ext=${LETKF_DATADIR#$WORKDIR}
#    remdir=/marconi_scratch/usera07smr/a07smr03/$NWPCONF/$ext
#    host=login.marconi.cineca.it
#    ssh $host mkdir -p $remdir || true
        rsync -pt $LETKF_DATADIR/laf${DATE}${TIME}0000.??? $MODEL_ARCHIVE_OUTPUT_ANA_REMOTE || true
    fi
else
    mkdir -p $WORKDIR/archive
    rsync -pt $LETKF_DATADIR/laf${DATE}${TIME}0000.det $MODEL_ARCHIVE_OUTPUT_ANA
    if [ -n "$MODEL_ARCHIVE_OUTPUT_ANA_REMOTE" ]; then
        rsync -pt $LETKF_DATADIR/laf${DATE}${TIME}0000.det $MODEL_ARCHIVE_OUTPUT_ANA_REMOTE || true
    fi
fi
if [ "$TIME" = "00" ]; then # clean data at least one month old
    for mm in 2 3 4; do
        MM=`date --date="${DATE} $mm month ago" +%%Y%%m`
        rm -f $MODEL_ARCHIVE_OUTPUT_ANA/laf${MM}????0000.???
    done
fi
fi

# finally archive locally, for next suite cycle, including daily cleaning
if [ -f "$LETKF_DATADIR/laf${DATE}${TIME}0000.det" ]; then
    arkilocal_setup
    arkilocal_create
    time putarki_archive grib $LETKF_DATADIR/laf${DATE}${TIME}0000.det
    if [ "$TIME" = "00" ]; then
        arki_dailycleanup $ARKI_CONF 6 12
    fi
    arkilocal_drop_from_cache
fi

for n in `seq 1 $ENS_TOTAL_MEMB`; do
    n3=`printf "%%03d" $n`
# override conf.sh
    ARKI_DIR=$WORKDIR/arki.$n
    if [ -f "$LETKF_DATADIR/laf${DATE}${TIME}0000.$n3" ]; then
        arkilocal_setup
        arkilocal_create
        time putarki_archive grib $LETKF_DATADIR/laf${DATE}${TIME}0000.$n3
        if [ "$TIME" = "00" ]; then
            arki_dailycleanup $ARKI_CONF 6 12
        fi
	arkilocal_drop_from_cache
    fi
done
